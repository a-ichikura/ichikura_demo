<launch>
  <arg name="TOPIC_CAMERA_COLOR" default="/kinova_wrist_camera/color/image_raw" />
  <arg name="TOPIC_CAMERA_DEPTH" default="/kinova_wrist_camera/aligned_depth_to_color/image_raw" />
  <arg name="TOPIC_CAMERA_POINTS" default="/kinova_wrist_camera/aligned_depth_to_color/points" />

  <arg name="sensor_frame" default="kinova_wrist_camera_color_optical_frame" />
  <arg name="rgb_camera_info" value="/kinova_wrist_camera/color/camera_info" />
  <arg name="detected_rects" value="/edgetpu_object_detector/output/rects" />
  <arg name="manager" default="object_detector_nodelet_manager" />
  <arg name="machine" default="localhost" />

  <arg name="launch_manager" default="false" />
  <arg name="publish_tf" default="true" />

  <machine name="localhost" address="localhost" />

  <!-- publish edgetpu object tf -->
  <!-- node name="$(arg manager)" pkg="nodelet" type="nodelet" args="manager"
        machine="$(arg machine)" if="$(arg launch_manager)"
        output="screen" / -->

  <node name="rects_to_cpi_ssd"
        pkg="jsk_recognition_utils" type="rect_array_to_cluster_point_indices.py"
        output="screen" >
    <remap from="~input" to="$(arg detected_rects)"/>
    <remap from="~input/info" to="$(arg rgb_camera_info)"/>
    <rosparam>
      always_subscribe: false
      approximate_sync: true
      use_info: true
      queue_size: 100
      slop: 0.1
    </rosparam>
  </node>


  <node name="throttle_segmentation" pkg="nodelet" type="nodelet"
        args="standalone jsk_topic_tools/LightweightThrottle"
        output="screen"
        machine="$(arg machine)">
    <remap from="~input" to="rects_to_cpi_ssd/output" />
    <remap from="~output" to="rects_to_cpi_ssd/output_throttle" />
  </node>

  <node pkg="nodelet" type="nodelet" name="euclidean_clustering"
        args="standalone jsk_pcl/EuclideanClustering" output="screen">
    <remap from="~input" to="$(arg TOPIC_CAMERA_POINTS)" />
    <remap from="~input/cluster_indices" to="rects_to_cpi_ssd/output_throttle" />
    <rosparam>
      tolerance: 0.02
      min_size: 100
      approximate_sync: true
      downsample_enable: false
      multi: true
      cluster_filter: 1  <!-- take max size of clustering in each cluster -->
    </rosparam>
  </node>

  <node name="segmentation_decomposer_ssd" pkg="nodelet" type="nodelet"
        args="standalone jsk_pcl/ClusterPointIndicesDecomposer"
        output="screen" 
        machine="$(arg machine)">
    <remap from="~input" to="$(arg TOPIC_CAMERA_POINTS)" />
    <remap from="~target" to="euclidean_clustering/output" />
    <rosparam subst_value="true">
      approximate_sync: true  
      align_boxes: false
      align_boxes_with_plane: false
      target_frame_id: body
      queue_size: 20
      publish_clouds: false
      publish_tf: $(arg publish_tf)
      sort_by: -cloud_size 
      use_pca: false
    </rosparam>
    </node>
    
</launch>
